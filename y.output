State 167 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: global_items

    2 global_items: ε
    3             | global_items global_item

    4 global_item: var_declaration
    5            | function_def

    6 type_specifier: TYPE_INT
    7               | TYPE_FLOAT
    8               | TYPE_BOOL
    9               | TYPE_STRING

   10 const_qualifier: ε
   11                | CONST

   12 var_declaration: const_qualifier type_specifier init_declarator_list ';'

   13 init_declarator_list: init_declarator
   14                     | init_declarator_list ',' init_declarator

   15 init_declarator: IDENTIFIER
   16                | IDENTIFIER '=' expression
   17                | IDENTIFIER '[' INTEGER ']'

   18 function_def: FUNCTION type_specifier IDENTIFIER '(' parameter_list ')' compound_statement
   19             | FUNCTION VOID IDENTIFIER '(' parameter_list ')' compound_statement

   20 parameter_list: ε
   21               | type_specifier IDENTIFIER
   22               | parameter_list ',' type_specifier IDENTIFIER

   23 compound_statement: '{' '}'
   24                   | '{' statement_list '}'

   25 statement_list: statement
   26               | statement_list statement

   27 statement: expression_statement
   28          | compound_statement
   29          | selection_statement
   30          | iteration_statement
   31          | jump_statement
   32          | var_declaration
   33          | io_statement

   34 expression_statement: ';'
   35                     | expression ';'

   36 selection_statement: IF '(' expression ')' statement
   37                    | IF '(' expression ')' statement ELSE statement

   38 iteration_statement: WHILE '(' expression ')' statement
   39                    | FOR '(' expression_statement expression_statement expression ')' statement

   40 jump_statement: RETURN ';'
   41               | RETURN expression ';'
   42               | BREAK ';'
   43               | CONTINUE ';'

   44 io_statement: INPUT IDENTIFIER ';'
   45             | OUTPUT expression ';'

   46 expression: assignment_expression

   47 assignment_expression: logical_expression
   48                      | lvalue '=' expression
   49                      | array_index '=' expression
   50                      | lvalue ADD_ASSIGN expression
   51                      | lvalue SUB_ASSIGN expression
   52                      | lvalue MUL_ASSIGN expression
   53                      | lvalue DIV_ASSIGN expression
   54                      | lvalue MOD_ASSIGN expression

   55 logical_expression: equality_expression
   56                   | logical_expression AND equality_expression
   57                   | logical_expression OR equality_expression

   58 equality_expression: relational_expression
   59                    | equality_expression EQ relational_expression
   60                    | equality_expression NE relational_expression

   61 relational_expression: additive_expression
   62                      | relational_expression '<' additive_expression
   63                      | relational_expression '>' additive_expression
   64                      | relational_expression LE additive_expression
   65                      | relational_expression GE additive_expression

   66 additive_expression: multiplicative_expression
   67                    | additive_expression '+' multiplicative_expression
   68                    | additive_expression '-' multiplicative_expression

   69 multiplicative_expression: unary_expression
   70                          | multiplicative_expression '*' unary_expression
   71                          | multiplicative_expression '/' unary_expression
   72                          | multiplicative_expression '%' unary_expression

   73 unary_expression: postfix_expression
   74                 | '-' unary_expression
   75                 | NOT unary_expression
   76                 | INC lvalue
   77                 | DEC lvalue

   78 postfix_expression: primary_expression
   79                   | array_index
   80                   | function_call
   81                   | lvalue INC
   82                   | lvalue DEC

   83 primary_expression: IDENTIFIER
   84                   | INTEGER
   85                   | BOOL_LITERAL
   86                   | STRING_LITERAL
   87                   | '(' expression ')'

   88 array_index: IDENTIFIER '[' expression ']'

   89 function_call: IDENTIFIER '(' ')'
   90              | IDENTIFIER '(' argument_list ')'

   91 argument_list: expression
   92              | expression ',' argument_list

   93 lvalue: IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 72
    '(' (40) 18 19 36 37 38 39 87 89 90
    ')' (41) 18 19 36 37 38 39 87 89 90
    '*' (42) 70
    '+' (43) 67
    ',' (44) 14 22 92
    '-' (45) 68 74
    '/' (47) 71
    ';' (59) 12 34 35 40 41 42 43 44 45
    '<' (60) 62
    '=' (61) 16 48 49
    '>' (62) 63
    '[' (91) 17 88
    ']' (93) 17 88
    '{' (123) 23 24
    '}' (125) 23 24
    error (256)
    IDENTIFIER <string> (258) 15 16 17 18 19 21 22 44 83 88 89 90 93
    STRING_LITERAL <string> (259) 86
    INTEGER <string> (260) 17 84
    BOOL_LITERAL <value> (261) 85
    TYPE_INT (262) 6
    TYPE_FLOAT (263) 7
    TYPE_BOOL (264) 8
    TYPE_STRING (265) 9
    CONST (266) 11
    IF (267) 36 37
    ELSE (268) 37
    WHILE (269) 38
    FOR (270) 39
    BREAK (271) 42
    CONTINUE (272) 43
    RETURN (273) 40 41
    FUNCTION (274) 18 19
    VOID (275) 19
    INPUT (276) 44
    OUTPUT (277) 45
    AND (278) 56
    OR (279) 57
    NOT (280) 75
    EQ (281) 59
    NE (282) 60
    LE (283) 64
    GE (284) 65
    INC (285) 76 81
    DEC (286) 77 82
    ADD_ASSIGN (287) 50
    SUB_ASSIGN (288) 51
    MUL_ASSIGN (289) 52
    DIV_ASSIGN (290) 53
    MOD_ASSIGN (291) 54


Nonterminals, with rules where they appear

    $accept (53)
        on left: 0
    program <tac> (54)
        on left: 1
        on right: 0
    global_items <tac> (55)
        on left: 2 3
        on right: 1 3
    global_item <tac> (56)
        on left: 4 5
        on right: 3
    type_specifier <type> (57)
        on left: 6 7 8 9
        on right: 12 18 21 22
    const_qualifier <value> (58)
        on left: 10 11
        on right: 12
    var_declaration <exp> (59)
        on left: 12
        on right: 4 32
    init_declarator_list <exp> (60)
        on left: 13 14
        on right: 12 14
    init_declarator <exp> (61)
        on left: 15 16 17
        on right: 13 14
    function_def <tac> (62)
        on left: 18 19
        on right: 5
    parameter_list <tac> (63)
        on left: 20 21 22
        on right: 18 19 22
    compound_statement <tac> (64)
        on left: 23 24
        on right: 18 19 28
    statement_list <tac> (65)
        on left: 25 26
        on right: 24 26
    statement <tac> (66)
        on left: 27 28 29 30 31 32 33
        on right: 25 26 36 37 38 39
    expression_statement <exp> (67)
        on left: 34 35
        on right: 27 39
    selection_statement <tac> (68)
        on left: 36 37
        on right: 29
    iteration_statement <tac> (69)
        on left: 38 39
        on right: 30
    jump_statement <tac> (70)
        on left: 40 41 42 43
        on right: 31
    io_statement <tac> (71)
        on left: 44 45
        on right: 33
    expression <exp> (72)
        on left: 46
        on right: 16 35 36 37 38 39 41 45 48 49 50 51 52 53 54 87 88 91 92
    assignment_expression <exp> (73)
        on left: 47 48 49 50 51 52 53 54
        on right: 46
    logical_expression <exp> (74)
        on left: 55 56 57
        on right: 47 56 57
    equality_expression <exp> (75)
        on left: 58 59 60
        on right: 55 56 57 59 60
    relational_expression <exp> (76)
        on left: 61 62 63 64 65
        on right: 58 59 60 62 63 64 65
    additive_expression <exp> (77)
        on left: 66 67 68
        on right: 61 62 63 64 65 67 68
    multiplicative_expression <exp> (78)
        on left: 69 70 71 72
        on right: 66 67 68 70 71 72
    unary_expression <exp> (79)
        on left: 73 74 75 76 77
        on right: 69 70 71 72 74 75
    postfix_expression <exp> (80)
        on left: 78 79 80 81 82
        on right: 73
    primary_expression <exp> (81)
        on left: 83 84 85 86 87
        on right: 78
    array_index <exp> (82)
        on left: 88
        on right: 49 79
    function_call <exp> (83)
        on left: 89 90
        on right: 80
    argument_list <exp> (84)
        on left: 91 92
        on right: 90 92
    lvalue <sym> (85)
        on left: 93
        on right: 48 50 51 52 53 54 76 77 81 82


State 0

    0 $accept: • program $end

    $default  reduce using rule 2 (global_items)

    program       go to state 1
    global_items  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: global_items •
    3 global_items: global_items • global_item

    CONST     shift, and go to state 4
    FUNCTION  shift, and go to state 5

    $end      reduce using rule 1 (program)
    $default  reduce using rule 10 (const_qualifier)

    global_item      go to state 6
    const_qualifier  go to state 7
    var_declaration  go to state 8
    function_def     go to state 9


State 3

    0 $accept: program $end •

    $default  accept


State 4

   11 const_qualifier: CONST •

    $default  reduce using rule 11 (const_qualifier)


State 5

   18 function_def: FUNCTION • type_specifier IDENTIFIER '(' parameter_list ')' compound_statement
   19             | FUNCTION • VOID IDENTIFIER '(' parameter_list ')' compound_statement

    TYPE_INT     shift, and go to state 10
    TYPE_FLOAT   shift, and go to state 11
    TYPE_BOOL    shift, and go to state 12
    TYPE_STRING  shift, and go to state 13
    VOID         shift, and go to state 14

    type_specifier  go to state 15


State 6

    3 global_items: global_items global_item •

    $default  reduce using rule 3 (global_items)


State 7

   12 var_declaration: const_qualifier • type_specifier init_declarator_list ';'

    TYPE_INT     shift, and go to state 10
    TYPE_FLOAT   shift, and go to state 11
    TYPE_BOOL    shift, and go to state 12
    TYPE_STRING  shift, and go to state 13

    type_specifier  go to state 16


State 8

    4 global_item: var_declaration •

    $default  reduce using rule 4 (global_item)


State 9

    5 global_item: function_def •

    $default  reduce using rule 5 (global_item)


State 10

    6 type_specifier: TYPE_INT •

    $default  reduce using rule 6 (type_specifier)


State 11

    7 type_specifier: TYPE_FLOAT •

    $default  reduce using rule 7 (type_specifier)


State 12

    8 type_specifier: TYPE_BOOL •

    $default  reduce using rule 8 (type_specifier)


State 13

    9 type_specifier: TYPE_STRING •

    $default  reduce using rule 9 (type_specifier)


State 14

   19 function_def: FUNCTION VOID • IDENTIFIER '(' parameter_list ')' compound_statement

    IDENTIFIER  shift, and go to state 17


State 15

   18 function_def: FUNCTION type_specifier • IDENTIFIER '(' parameter_list ')' compound_statement

    IDENTIFIER  shift, and go to state 18


State 16

   12 var_declaration: const_qualifier type_specifier • init_declarator_list ';'

    IDENTIFIER  shift, and go to state 19

    init_declarator_list  go to state 20
    init_declarator       go to state 21


State 17

   19 function_def: FUNCTION VOID IDENTIFIER • '(' parameter_list ')' compound_statement

    '('  shift, and go to state 22


State 18

   18 function_def: FUNCTION type_specifier IDENTIFIER • '(' parameter_list ')' compound_statement

    '('  shift, and go to state 23


State 19

   15 init_declarator: IDENTIFIER •
   16                | IDENTIFIER • '=' expression
   17                | IDENTIFIER • '[' INTEGER ']'

    '='  shift, and go to state 24
    '['  shift, and go to state 25

    $default  reduce using rule 15 (init_declarator)


State 20

   12 var_declaration: const_qualifier type_specifier init_declarator_list • ';'
   14 init_declarator_list: init_declarator_list • ',' init_declarator

    ';'  shift, and go to state 26
    ','  shift, and go to state 27


State 21

   13 init_declarator_list: init_declarator •

    $default  reduce using rule 13 (init_declarator_list)


State 22

   19 function_def: FUNCTION VOID IDENTIFIER '(' • parameter_list ')' compound_statement

    TYPE_INT     shift, and go to state 10
    TYPE_FLOAT   shift, and go to state 11
    TYPE_BOOL    shift, and go to state 12
    TYPE_STRING  shift, and go to state 13

    $default  reduce using rule 20 (parameter_list)

    type_specifier  go to state 28
    parameter_list  go to state 29


State 23

   18 function_def: FUNCTION type_specifier IDENTIFIER '(' • parameter_list ')' compound_statement

    TYPE_INT     shift, and go to state 10
    TYPE_FLOAT   shift, and go to state 11
    TYPE_BOOL    shift, and go to state 12
    TYPE_STRING  shift, and go to state 13

    $default  reduce using rule 20 (parameter_list)

    type_specifier  go to state 28
    parameter_list  go to state 30


State 24

   16 init_declarator: IDENTIFIER '=' • expression

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39

    expression                 go to state 40
    assignment_expression      go to state 41
    logical_expression         go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    additive_expression        go to state 45
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 50
    function_call              go to state 51
    lvalue                     go to state 52


State 25

   17 init_declarator: IDENTIFIER '[' • INTEGER ']'

    INTEGER  shift, and go to state 53


State 26

   12 var_declaration: const_qualifier type_specifier init_declarator_list ';' •

    $default  reduce using rule 12 (var_declaration)


State 27

   14 init_declarator_list: init_declarator_list ',' • init_declarator

    IDENTIFIER  shift, and go to state 19

    init_declarator  go to state 54


State 28

   21 parameter_list: type_specifier • IDENTIFIER

    IDENTIFIER  shift, and go to state 55


State 29

   19 function_def: FUNCTION VOID IDENTIFIER '(' parameter_list • ')' compound_statement
   22 parameter_list: parameter_list • ',' type_specifier IDENTIFIER

    ','  shift, and go to state 56
    ')'  shift, and go to state 57


State 30

   18 function_def: FUNCTION type_specifier IDENTIFIER '(' parameter_list • ')' compound_statement
   22 parameter_list: parameter_list • ',' type_specifier IDENTIFIER

    ','  shift, and go to state 56
    ')'  shift, and go to state 58


State 31

   83 primary_expression: IDENTIFIER •
   88 array_index: IDENTIFIER • '[' expression ']'
   89 function_call: IDENTIFIER • '(' ')'
   90              | IDENTIFIER • '(' argument_list ')'
   93 lvalue: IDENTIFIER •

    '['  shift, and go to state 59
    '('  shift, and go to state 60

    INC         reduce using rule 93 (lvalue)
    DEC         reduce using rule 93 (lvalue)
    ADD_ASSIGN  reduce using rule 93 (lvalue)
    SUB_ASSIGN  reduce using rule 93 (lvalue)
    MUL_ASSIGN  reduce using rule 93 (lvalue)
    DIV_ASSIGN  reduce using rule 93 (lvalue)
    MOD_ASSIGN  reduce using rule 93 (lvalue)
    '='         reduce using rule 93 (lvalue)
    $default    reduce using rule 83 (primary_expression)


State 32

   86 primary_expression: STRING_LITERAL •

    $default  reduce using rule 86 (primary_expression)


State 33

   84 primary_expression: INTEGER •

    $default  reduce using rule 84 (primary_expression)


State 34

   85 primary_expression: BOOL_LITERAL •

    $default  reduce using rule 85 (primary_expression)


State 35

   75 unary_expression: NOT • unary_expression

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39

    unary_expression    go to state 61
    postfix_expression  go to state 48
    primary_expression  go to state 49
    array_index         go to state 62
    function_call       go to state 51
    lvalue              go to state 63


State 36

   76 unary_expression: INC • lvalue

    IDENTIFIER  shift, and go to state 64

    lvalue  go to state 65


State 37

   77 unary_expression: DEC • lvalue

    IDENTIFIER  shift, and go to state 64

    lvalue  go to state 66


State 38

   74 unary_expression: '-' • unary_expression

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39

    unary_expression    go to state 67
    postfix_expression  go to state 48
    primary_expression  go to state 49
    array_index         go to state 62
    function_call       go to state 51
    lvalue              go to state 63


State 39

   87 primary_expression: '(' • expression ')'

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39

    expression                 go to state 68
    assignment_expression      go to state 41
    logical_expression         go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    additive_expression        go to state 45
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 50
    function_call              go to state 51
    lvalue                     go to state 52


State 40

   16 init_declarator: IDENTIFIER '=' expression •

    $default  reduce using rule 16 (init_declarator)


State 41

   46 expression: assignment_expression •

    $default  reduce using rule 46 (expression)


State 42

   47 assignment_expression: logical_expression •
   56 logical_expression: logical_expression • AND equality_expression
   57                   | logical_expression • OR equality_expression

    AND  shift, and go to state 69
    OR   shift, and go to state 70

    $default  reduce using rule 47 (assignment_expression)


State 43

   55 logical_expression: equality_expression •
   59 equality_expression: equality_expression • EQ relational_expression
   60                    | equality_expression • NE relational_expression

    EQ  shift, and go to state 71
    NE  shift, and go to state 72

    $default  reduce using rule 55 (logical_expression)


State 44

   58 equality_expression: relational_expression •
   62 relational_expression: relational_expression • '<' additive_expression
   63                      | relational_expression • '>' additive_expression
   64                      | relational_expression • LE additive_expression
   65                      | relational_expression • GE additive_expression

    LE   shift, and go to state 73
    GE   shift, and go to state 74
    '<'  shift, and go to state 75
    '>'  shift, and go to state 76

    $default  reduce using rule 58 (equality_expression)


State 45

   61 relational_expression: additive_expression •
   67 additive_expression: additive_expression • '+' multiplicative_expression
   68                    | additive_expression • '-' multiplicative_expression

    '+'  shift, and go to state 77
    '-'  shift, and go to state 78

    $default  reduce using rule 61 (relational_expression)


State 46

   66 additive_expression: multiplicative_expression •
   70 multiplicative_expression: multiplicative_expression • '*' unary_expression
   71                          | multiplicative_expression • '/' unary_expression
   72                          | multiplicative_expression • '%' unary_expression

    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '%'  shift, and go to state 81

    $default  reduce using rule 66 (additive_expression)


State 47

   69 multiplicative_expression: unary_expression •

    $default  reduce using rule 69 (multiplicative_expression)


State 48

   73 unary_expression: postfix_expression •

    $default  reduce using rule 73 (unary_expression)


State 49

   78 postfix_expression: primary_expression •

    $default  reduce using rule 78 (postfix_expression)


State 50

   49 assignment_expression: array_index • '=' expression
   79 postfix_expression: array_index •

    '='  shift, and go to state 82

    $default  reduce using rule 79 (postfix_expression)


State 51

   80 postfix_expression: function_call •

    $default  reduce using rule 80 (postfix_expression)


State 52

   48 assignment_expression: lvalue • '=' expression
   50                      | lvalue • ADD_ASSIGN expression
   51                      | lvalue • SUB_ASSIGN expression
   52                      | lvalue • MUL_ASSIGN expression
   53                      | lvalue • DIV_ASSIGN expression
   54                      | lvalue • MOD_ASSIGN expression
   81 postfix_expression: lvalue • INC
   82                   | lvalue • DEC

    INC         shift, and go to state 83
    DEC         shift, and go to state 84
    ADD_ASSIGN  shift, and go to state 85
    SUB_ASSIGN  shift, and go to state 86
    MUL_ASSIGN  shift, and go to state 87
    DIV_ASSIGN  shift, and go to state 88
    MOD_ASSIGN  shift, and go to state 89
    '='         shift, and go to state 90


State 53

   17 init_declarator: IDENTIFIER '[' INTEGER • ']'

    ']'  shift, and go to state 91


State 54

   14 init_declarator_list: init_declarator_list ',' init_declarator •

    $default  reduce using rule 14 (init_declarator_list)


State 55

   21 parameter_list: type_specifier IDENTIFIER •

    $default  reduce using rule 21 (parameter_list)


State 56

   22 parameter_list: parameter_list ',' • type_specifier IDENTIFIER

    TYPE_INT     shift, and go to state 10
    TYPE_FLOAT   shift, and go to state 11
    TYPE_BOOL    shift, and go to state 12
    TYPE_STRING  shift, and go to state 13

    type_specifier  go to state 92


State 57

   19 function_def: FUNCTION VOID IDENTIFIER '(' parameter_list ')' • compound_statement

    '{'  shift, and go to state 93

    compound_statement  go to state 94


State 58

   18 function_def: FUNCTION type_specifier IDENTIFIER '(' parameter_list ')' • compound_statement

    '{'  shift, and go to state 93

    compound_statement  go to state 95


State 59

   88 array_index: IDENTIFIER '[' • expression ']'

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39

    expression                 go to state 96
    assignment_expression      go to state 41
    logical_expression         go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    additive_expression        go to state 45
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 50
    function_call              go to state 51
    lvalue                     go to state 52


State 60

   89 function_call: IDENTIFIER '(' • ')'
   90              | IDENTIFIER '(' • argument_list ')'

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39
    ')'             shift, and go to state 97

    expression                 go to state 98
    assignment_expression      go to state 41
    logical_expression         go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    additive_expression        go to state 45
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 50
    function_call              go to state 51
    argument_list              go to state 99
    lvalue                     go to state 52


State 61

   75 unary_expression: NOT unary_expression •

    $default  reduce using rule 75 (unary_expression)


State 62

   79 postfix_expression: array_index •

    $default  reduce using rule 79 (postfix_expression)


State 63

   81 postfix_expression: lvalue • INC
   82                   | lvalue • DEC

    INC  shift, and go to state 83
    DEC  shift, and go to state 84


State 64

   93 lvalue: IDENTIFIER •

    $default  reduce using rule 93 (lvalue)


State 65

   76 unary_expression: INC lvalue •

    $default  reduce using rule 76 (unary_expression)


State 66

   77 unary_expression: DEC lvalue •

    $default  reduce using rule 77 (unary_expression)


State 67

   74 unary_expression: '-' unary_expression •

    $default  reduce using rule 74 (unary_expression)


State 68

   87 primary_expression: '(' expression • ')'

    ')'  shift, and go to state 100


State 69

   56 logical_expression: logical_expression AND • equality_expression

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39

    equality_expression        go to state 101
    relational_expression      go to state 44
    additive_expression        go to state 45
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 62
    function_call              go to state 51
    lvalue                     go to state 63


State 70

   57 logical_expression: logical_expression OR • equality_expression

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39

    equality_expression        go to state 102
    relational_expression      go to state 44
    additive_expression        go to state 45
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 62
    function_call              go to state 51
    lvalue                     go to state 63


State 71

   59 equality_expression: equality_expression EQ • relational_expression

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39

    relational_expression      go to state 103
    additive_expression        go to state 45
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 62
    function_call              go to state 51
    lvalue                     go to state 63


State 72

   60 equality_expression: equality_expression NE • relational_expression

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39

    relational_expression      go to state 104
    additive_expression        go to state 45
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 62
    function_call              go to state 51
    lvalue                     go to state 63


State 73

   64 relational_expression: relational_expression LE • additive_expression

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39

    additive_expression        go to state 105
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 62
    function_call              go to state 51
    lvalue                     go to state 63


State 74

   65 relational_expression: relational_expression GE • additive_expression

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39

    additive_expression        go to state 106
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 62
    function_call              go to state 51
    lvalue                     go to state 63


State 75

   62 relational_expression: relational_expression '<' • additive_expression

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39

    additive_expression        go to state 107
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 62
    function_call              go to state 51
    lvalue                     go to state 63


State 76

   63 relational_expression: relational_expression '>' • additive_expression

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39

    additive_expression        go to state 108
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 62
    function_call              go to state 51
    lvalue                     go to state 63


State 77

   67 additive_expression: additive_expression '+' • multiplicative_expression

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39

    multiplicative_expression  go to state 109
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 62
    function_call              go to state 51
    lvalue                     go to state 63


State 78

   68 additive_expression: additive_expression '-' • multiplicative_expression

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39

    multiplicative_expression  go to state 110
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 62
    function_call              go to state 51
    lvalue                     go to state 63


State 79

   70 multiplicative_expression: multiplicative_expression '*' • unary_expression

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39

    unary_expression    go to state 111
    postfix_expression  go to state 48
    primary_expression  go to state 49
    array_index         go to state 62
    function_call       go to state 51
    lvalue              go to state 63


State 80

   71 multiplicative_expression: multiplicative_expression '/' • unary_expression

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39

    unary_expression    go to state 112
    postfix_expression  go to state 48
    primary_expression  go to state 49
    array_index         go to state 62
    function_call       go to state 51
    lvalue              go to state 63


State 81

   72 multiplicative_expression: multiplicative_expression '%' • unary_expression

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39

    unary_expression    go to state 113
    postfix_expression  go to state 48
    primary_expression  go to state 49
    array_index         go to state 62
    function_call       go to state 51
    lvalue              go to state 63


State 82

   49 assignment_expression: array_index '=' • expression

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39

    expression                 go to state 114
    assignment_expression      go to state 41
    logical_expression         go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    additive_expression        go to state 45
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 50
    function_call              go to state 51
    lvalue                     go to state 52


State 83

   81 postfix_expression: lvalue INC •

    $default  reduce using rule 81 (postfix_expression)


State 84

   82 postfix_expression: lvalue DEC •

    $default  reduce using rule 82 (postfix_expression)


State 85

   50 assignment_expression: lvalue ADD_ASSIGN • expression

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39

    expression                 go to state 115
    assignment_expression      go to state 41
    logical_expression         go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    additive_expression        go to state 45
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 50
    function_call              go to state 51
    lvalue                     go to state 52


State 86

   51 assignment_expression: lvalue SUB_ASSIGN • expression

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39

    expression                 go to state 116
    assignment_expression      go to state 41
    logical_expression         go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    additive_expression        go to state 45
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 50
    function_call              go to state 51
    lvalue                     go to state 52


State 87

   52 assignment_expression: lvalue MUL_ASSIGN • expression

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39

    expression                 go to state 117
    assignment_expression      go to state 41
    logical_expression         go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    additive_expression        go to state 45
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 50
    function_call              go to state 51
    lvalue                     go to state 52


State 88

   53 assignment_expression: lvalue DIV_ASSIGN • expression

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39

    expression                 go to state 118
    assignment_expression      go to state 41
    logical_expression         go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    additive_expression        go to state 45
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 50
    function_call              go to state 51
    lvalue                     go to state 52


State 89

   54 assignment_expression: lvalue MOD_ASSIGN • expression

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39

    expression                 go to state 119
    assignment_expression      go to state 41
    logical_expression         go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    additive_expression        go to state 45
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 50
    function_call              go to state 51
    lvalue                     go to state 52


State 90

   48 assignment_expression: lvalue '=' • expression

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39

    expression                 go to state 120
    assignment_expression      go to state 41
    logical_expression         go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    additive_expression        go to state 45
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 50
    function_call              go to state 51
    lvalue                     go to state 52


State 91

   17 init_declarator: IDENTIFIER '[' INTEGER ']' •

    $default  reduce using rule 17 (init_declarator)


State 92

   22 parameter_list: parameter_list ',' type_specifier • IDENTIFIER

    IDENTIFIER  shift, and go to state 121


State 93

   23 compound_statement: '{' • '}'
   24                   | '{' • statement_list '}'

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    CONST           shift, and go to state 4
    IF              shift, and go to state 122
    WHILE           shift, and go to state 123
    FOR             shift, and go to state 124
    BREAK           shift, and go to state 125
    CONTINUE        shift, and go to state 126
    RETURN          shift, and go to state 127
    INPUT           shift, and go to state 128
    OUTPUT          shift, and go to state 129
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39
    ';'             shift, and go to state 130
    '{'             shift, and go to state 93
    '}'             shift, and go to state 131

    $default  reduce using rule 10 (const_qualifier)

    const_qualifier            go to state 7
    var_declaration            go to state 132
    compound_statement         go to state 133
    statement_list             go to state 134
    statement                  go to state 135
    expression_statement       go to state 136
    selection_statement        go to state 137
    iteration_statement        go to state 138
    jump_statement             go to state 139
    io_statement               go to state 140
    expression                 go to state 141
    assignment_expression      go to state 41
    logical_expression         go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    additive_expression        go to state 45
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 50
    function_call              go to state 51
    lvalue                     go to state 52


State 94

   19 function_def: FUNCTION VOID IDENTIFIER '(' parameter_list ')' compound_statement •

    $default  reduce using rule 19 (function_def)


State 95

   18 function_def: FUNCTION type_specifier IDENTIFIER '(' parameter_list ')' compound_statement •

    $default  reduce using rule 18 (function_def)


State 96

   88 array_index: IDENTIFIER '[' expression • ']'

    ']'  shift, and go to state 142


State 97

   89 function_call: IDENTIFIER '(' ')' •

    $default  reduce using rule 89 (function_call)


State 98

   91 argument_list: expression •
   92              | expression • ',' argument_list

    ','  shift, and go to state 143

    $default  reduce using rule 91 (argument_list)


State 99

   90 function_call: IDENTIFIER '(' argument_list • ')'

    ')'  shift, and go to state 144


State 100

   87 primary_expression: '(' expression ')' •

    $default  reduce using rule 87 (primary_expression)


State 101

   56 logical_expression: logical_expression AND equality_expression •
   59 equality_expression: equality_expression • EQ relational_expression
   60                    | equality_expression • NE relational_expression

    EQ  shift, and go to state 71
    NE  shift, and go to state 72

    $default  reduce using rule 56 (logical_expression)


State 102

   57 logical_expression: logical_expression OR equality_expression •
   59 equality_expression: equality_expression • EQ relational_expression
   60                    | equality_expression • NE relational_expression

    EQ  shift, and go to state 71
    NE  shift, and go to state 72

    $default  reduce using rule 57 (logical_expression)


State 103

   59 equality_expression: equality_expression EQ relational_expression •
   62 relational_expression: relational_expression • '<' additive_expression
   63                      | relational_expression • '>' additive_expression
   64                      | relational_expression • LE additive_expression
   65                      | relational_expression • GE additive_expression

    LE   shift, and go to state 73
    GE   shift, and go to state 74
    '<'  shift, and go to state 75
    '>'  shift, and go to state 76

    $default  reduce using rule 59 (equality_expression)


State 104

   60 equality_expression: equality_expression NE relational_expression •
   62 relational_expression: relational_expression • '<' additive_expression
   63                      | relational_expression • '>' additive_expression
   64                      | relational_expression • LE additive_expression
   65                      | relational_expression • GE additive_expression

    LE   shift, and go to state 73
    GE   shift, and go to state 74
    '<'  shift, and go to state 75
    '>'  shift, and go to state 76

    $default  reduce using rule 60 (equality_expression)


State 105

   64 relational_expression: relational_expression LE additive_expression •
   67 additive_expression: additive_expression • '+' multiplicative_expression
   68                    | additive_expression • '-' multiplicative_expression

    '+'  shift, and go to state 77
    '-'  shift, and go to state 78

    $default  reduce using rule 64 (relational_expression)


State 106

   65 relational_expression: relational_expression GE additive_expression •
   67 additive_expression: additive_expression • '+' multiplicative_expression
   68                    | additive_expression • '-' multiplicative_expression

    '+'  shift, and go to state 77
    '-'  shift, and go to state 78

    $default  reduce using rule 65 (relational_expression)


State 107

   62 relational_expression: relational_expression '<' additive_expression •
   67 additive_expression: additive_expression • '+' multiplicative_expression
   68                    | additive_expression • '-' multiplicative_expression

    '+'  shift, and go to state 77
    '-'  shift, and go to state 78

    $default  reduce using rule 62 (relational_expression)


State 108

   63 relational_expression: relational_expression '>' additive_expression •
   67 additive_expression: additive_expression • '+' multiplicative_expression
   68                    | additive_expression • '-' multiplicative_expression

    '+'  shift, and go to state 77
    '-'  shift, and go to state 78

    $default  reduce using rule 63 (relational_expression)


State 109

   67 additive_expression: additive_expression '+' multiplicative_expression •
   70 multiplicative_expression: multiplicative_expression • '*' unary_expression
   71                          | multiplicative_expression • '/' unary_expression
   72                          | multiplicative_expression • '%' unary_expression

    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '%'  shift, and go to state 81

    $default  reduce using rule 67 (additive_expression)


State 110

   68 additive_expression: additive_expression '-' multiplicative_expression •
   70 multiplicative_expression: multiplicative_expression • '*' unary_expression
   71                          | multiplicative_expression • '/' unary_expression
   72                          | multiplicative_expression • '%' unary_expression

    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '%'  shift, and go to state 81

    $default  reduce using rule 68 (additive_expression)


State 111

   70 multiplicative_expression: multiplicative_expression '*' unary_expression •

    $default  reduce using rule 70 (multiplicative_expression)


State 112

   71 multiplicative_expression: multiplicative_expression '/' unary_expression •

    $default  reduce using rule 71 (multiplicative_expression)


State 113

   72 multiplicative_expression: multiplicative_expression '%' unary_expression •

    $default  reduce using rule 72 (multiplicative_expression)


State 114

   49 assignment_expression: array_index '=' expression •

    $default  reduce using rule 49 (assignment_expression)


State 115

   50 assignment_expression: lvalue ADD_ASSIGN expression •

    $default  reduce using rule 50 (assignment_expression)


State 116

   51 assignment_expression: lvalue SUB_ASSIGN expression •

    $default  reduce using rule 51 (assignment_expression)


State 117

   52 assignment_expression: lvalue MUL_ASSIGN expression •

    $default  reduce using rule 52 (assignment_expression)


State 118

   53 assignment_expression: lvalue DIV_ASSIGN expression •

    $default  reduce using rule 53 (assignment_expression)


State 119

   54 assignment_expression: lvalue MOD_ASSIGN expression •

    $default  reduce using rule 54 (assignment_expression)


State 120

   48 assignment_expression: lvalue '=' expression •

    $default  reduce using rule 48 (assignment_expression)


State 121

   22 parameter_list: parameter_list ',' type_specifier IDENTIFIER •

    $default  reduce using rule 22 (parameter_list)


State 122

   36 selection_statement: IF • '(' expression ')' statement
   37                    | IF • '(' expression ')' statement ELSE statement

    '('  shift, and go to state 145


State 123

   38 iteration_statement: WHILE • '(' expression ')' statement

    '('  shift, and go to state 146


State 124

   39 iteration_statement: FOR • '(' expression_statement expression_statement expression ')' statement

    '('  shift, and go to state 147


State 125

   42 jump_statement: BREAK • ';'

    ';'  shift, and go to state 148


State 126

   43 jump_statement: CONTINUE • ';'

    ';'  shift, and go to state 149


State 127

   40 jump_statement: RETURN • ';'
   41               | RETURN • expression ';'

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39
    ';'             shift, and go to state 150

    expression                 go to state 151
    assignment_expression      go to state 41
    logical_expression         go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    additive_expression        go to state 45
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 50
    function_call              go to state 51
    lvalue                     go to state 52


State 128

   44 io_statement: INPUT • IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 152


State 129

   45 io_statement: OUTPUT • expression ';'

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39

    expression                 go to state 153
    assignment_expression      go to state 41
    logical_expression         go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    additive_expression        go to state 45
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 50
    function_call              go to state 51
    lvalue                     go to state 52


State 130

   34 expression_statement: ';' •

    $default  reduce using rule 34 (expression_statement)


State 131

   23 compound_statement: '{' '}' •

    $default  reduce using rule 23 (compound_statement)


State 132

   32 statement: var_declaration •

    $default  reduce using rule 32 (statement)


State 133

   28 statement: compound_statement •

    $default  reduce using rule 28 (statement)


State 134

   24 compound_statement: '{' statement_list • '}'
   26 statement_list: statement_list • statement

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    CONST           shift, and go to state 4
    IF              shift, and go to state 122
    WHILE           shift, and go to state 123
    FOR             shift, and go to state 124
    BREAK           shift, and go to state 125
    CONTINUE        shift, and go to state 126
    RETURN          shift, and go to state 127
    INPUT           shift, and go to state 128
    OUTPUT          shift, and go to state 129
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39
    ';'             shift, and go to state 130
    '{'             shift, and go to state 93
    '}'             shift, and go to state 154

    $default  reduce using rule 10 (const_qualifier)

    const_qualifier            go to state 7
    var_declaration            go to state 132
    compound_statement         go to state 133
    statement                  go to state 155
    expression_statement       go to state 136
    selection_statement        go to state 137
    iteration_statement        go to state 138
    jump_statement             go to state 139
    io_statement               go to state 140
    expression                 go to state 141
    assignment_expression      go to state 41
    logical_expression         go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    additive_expression        go to state 45
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 50
    function_call              go to state 51
    lvalue                     go to state 52


State 135

   25 statement_list: statement •

    $default  reduce using rule 25 (statement_list)


State 136

   27 statement: expression_statement •

    $default  reduce using rule 27 (statement)


State 137

   29 statement: selection_statement •

    $default  reduce using rule 29 (statement)


State 138

   30 statement: iteration_statement •

    $default  reduce using rule 30 (statement)


State 139

   31 statement: jump_statement •

    $default  reduce using rule 31 (statement)


State 140

   33 statement: io_statement •

    $default  reduce using rule 33 (statement)


State 141

   35 expression_statement: expression • ';'

    ';'  shift, and go to state 156


State 142

   88 array_index: IDENTIFIER '[' expression ']' •

    $default  reduce using rule 88 (array_index)


State 143

   92 argument_list: expression ',' • argument_list

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39

    expression                 go to state 98
    assignment_expression      go to state 41
    logical_expression         go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    additive_expression        go to state 45
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 50
    function_call              go to state 51
    argument_list              go to state 157
    lvalue                     go to state 52


State 144

   90 function_call: IDENTIFIER '(' argument_list ')' •

    $default  reduce using rule 90 (function_call)


State 145

   36 selection_statement: IF '(' • expression ')' statement
   37                    | IF '(' • expression ')' statement ELSE statement

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39

    expression                 go to state 158
    assignment_expression      go to state 41
    logical_expression         go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    additive_expression        go to state 45
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 50
    function_call              go to state 51
    lvalue                     go to state 52


State 146

   38 iteration_statement: WHILE '(' • expression ')' statement

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39

    expression                 go to state 159
    assignment_expression      go to state 41
    logical_expression         go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    additive_expression        go to state 45
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 50
    function_call              go to state 51
    lvalue                     go to state 52


State 147

   39 iteration_statement: FOR '(' • expression_statement expression_statement expression ')' statement

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39
    ';'             shift, and go to state 130

    expression_statement       go to state 160
    expression                 go to state 141
    assignment_expression      go to state 41
    logical_expression         go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    additive_expression        go to state 45
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 50
    function_call              go to state 51
    lvalue                     go to state 52


State 148

   42 jump_statement: BREAK ';' •

    $default  reduce using rule 42 (jump_statement)


State 149

   43 jump_statement: CONTINUE ';' •

    $default  reduce using rule 43 (jump_statement)


State 150

   40 jump_statement: RETURN ';' •

    $default  reduce using rule 40 (jump_statement)


State 151

   41 jump_statement: RETURN expression • ';'

    ';'  shift, and go to state 161


State 152

   44 io_statement: INPUT IDENTIFIER • ';'

    ';'  shift, and go to state 162


State 153

   45 io_statement: OUTPUT expression • ';'

    ';'  shift, and go to state 163


State 154

   24 compound_statement: '{' statement_list '}' •

    $default  reduce using rule 24 (compound_statement)


State 155

   26 statement_list: statement_list statement •

    $default  reduce using rule 26 (statement_list)


State 156

   35 expression_statement: expression ';' •

    $default  reduce using rule 35 (expression_statement)


State 157

   92 argument_list: expression ',' argument_list •

    $default  reduce using rule 92 (argument_list)


State 158

   36 selection_statement: IF '(' expression • ')' statement
   37                    | IF '(' expression • ')' statement ELSE statement

    ')'  shift, and go to state 164


State 159

   38 iteration_statement: WHILE '(' expression • ')' statement

    ')'  shift, and go to state 165


State 160

   39 iteration_statement: FOR '(' expression_statement • expression_statement expression ')' statement

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39
    ';'             shift, and go to state 130

    expression_statement       go to state 166
    expression                 go to state 141
    assignment_expression      go to state 41
    logical_expression         go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    additive_expression        go to state 45
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 50
    function_call              go to state 51
    lvalue                     go to state 52


State 161

   41 jump_statement: RETURN expression ';' •

    $default  reduce using rule 41 (jump_statement)


State 162

   44 io_statement: INPUT IDENTIFIER ';' •

    $default  reduce using rule 44 (io_statement)


State 163

   45 io_statement: OUTPUT expression ';' •

    $default  reduce using rule 45 (io_statement)


State 164

   36 selection_statement: IF '(' expression ')' • statement
   37                    | IF '(' expression ')' • statement ELSE statement

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    CONST           shift, and go to state 4
    IF              shift, and go to state 122
    WHILE           shift, and go to state 123
    FOR             shift, and go to state 124
    BREAK           shift, and go to state 125
    CONTINUE        shift, and go to state 126
    RETURN          shift, and go to state 127
    INPUT           shift, and go to state 128
    OUTPUT          shift, and go to state 129
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39
    ';'             shift, and go to state 130
    '{'             shift, and go to state 93

    $default  reduce using rule 10 (const_qualifier)

    const_qualifier            go to state 7
    var_declaration            go to state 132
    compound_statement         go to state 133
    statement                  go to state 167
    expression_statement       go to state 136
    selection_statement        go to state 137
    iteration_statement        go to state 138
    jump_statement             go to state 139
    io_statement               go to state 140
    expression                 go to state 141
    assignment_expression      go to state 41
    logical_expression         go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    additive_expression        go to state 45
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 50
    function_call              go to state 51
    lvalue                     go to state 52


State 165

   38 iteration_statement: WHILE '(' expression ')' • statement

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    CONST           shift, and go to state 4
    IF              shift, and go to state 122
    WHILE           shift, and go to state 123
    FOR             shift, and go to state 124
    BREAK           shift, and go to state 125
    CONTINUE        shift, and go to state 126
    RETURN          shift, and go to state 127
    INPUT           shift, and go to state 128
    OUTPUT          shift, and go to state 129
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39
    ';'             shift, and go to state 130
    '{'             shift, and go to state 93

    $default  reduce using rule 10 (const_qualifier)

    const_qualifier            go to state 7
    var_declaration            go to state 132
    compound_statement         go to state 133
    statement                  go to state 168
    expression_statement       go to state 136
    selection_statement        go to state 137
    iteration_statement        go to state 138
    jump_statement             go to state 139
    io_statement               go to state 140
    expression                 go to state 141
    assignment_expression      go to state 41
    logical_expression         go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    additive_expression        go to state 45
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 50
    function_call              go to state 51
    lvalue                     go to state 52


State 166

   39 iteration_statement: FOR '(' expression_statement expression_statement • expression ')' statement

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39

    expression                 go to state 169
    assignment_expression      go to state 41
    logical_expression         go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    additive_expression        go to state 45
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 50
    function_call              go to state 51
    lvalue                     go to state 52


State 167

   36 selection_statement: IF '(' expression ')' statement •
   37                    | IF '(' expression ')' statement • ELSE statement

    ELSE  shift, and go to state 170

    ELSE      [reduce using rule 36 (selection_statement)]
    $default  reduce using rule 36 (selection_statement)

    shift/reduce conflict on token ELSE:
       36 selection_statement: IF '(' expression ')' statement •
       37 selection_statement: IF '(' expression ')' statement • ELSE statement
      Example: IF '(' expression ')' IF '(' expression ')' statement • ELSE statement
      Shift derivation
        selection_statement
        ↳ 36: IF '(' expression ')' statement
                                    ↳ 29: selection_statement
                                          ↳ 37: IF '(' expression ')' statement • ELSE statement
      Reduce derivation
        selection_statement
        ↳ 37: IF '(' expression ')' statement                                     ELSE statement
                                    ↳ 29: selection_statement
                                          ↳ 36: IF '(' expression ')' statement •



State 168

   38 iteration_statement: WHILE '(' expression ')' statement •

    $default  reduce using rule 38 (iteration_statement)


State 169

   39 iteration_statement: FOR '(' expression_statement expression_statement expression • ')' statement

    ')'  shift, and go to state 171


State 170

   37 selection_statement: IF '(' expression ')' statement ELSE • statement

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    CONST           shift, and go to state 4
    IF              shift, and go to state 122
    WHILE           shift, and go to state 123
    FOR             shift, and go to state 124
    BREAK           shift, and go to state 125
    CONTINUE        shift, and go to state 126
    RETURN          shift, and go to state 127
    INPUT           shift, and go to state 128
    OUTPUT          shift, and go to state 129
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39
    ';'             shift, and go to state 130
    '{'             shift, and go to state 93

    $default  reduce using rule 10 (const_qualifier)

    const_qualifier            go to state 7
    var_declaration            go to state 132
    compound_statement         go to state 133
    statement                  go to state 172
    expression_statement       go to state 136
    selection_statement        go to state 137
    iteration_statement        go to state 138
    jump_statement             go to state 139
    io_statement               go to state 140
    expression                 go to state 141
    assignment_expression      go to state 41
    logical_expression         go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    additive_expression        go to state 45
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 50
    function_call              go to state 51
    lvalue                     go to state 52


State 171

   39 iteration_statement: FOR '(' expression_statement expression_statement expression ')' • statement

    IDENTIFIER      shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    INTEGER         shift, and go to state 33
    BOOL_LITERAL    shift, and go to state 34
    CONST           shift, and go to state 4
    IF              shift, and go to state 122
    WHILE           shift, and go to state 123
    FOR             shift, and go to state 124
    BREAK           shift, and go to state 125
    CONTINUE        shift, and go to state 126
    RETURN          shift, and go to state 127
    INPUT           shift, and go to state 128
    OUTPUT          shift, and go to state 129
    NOT             shift, and go to state 35
    INC             shift, and go to state 36
    DEC             shift, and go to state 37
    '-'             shift, and go to state 38
    '('             shift, and go to state 39
    ';'             shift, and go to state 130
    '{'             shift, and go to state 93

    $default  reduce using rule 10 (const_qualifier)

    const_qualifier            go to state 7
    var_declaration            go to state 132
    compound_statement         go to state 133
    statement                  go to state 173
    expression_statement       go to state 136
    selection_statement        go to state 137
    iteration_statement        go to state 138
    jump_statement             go to state 139
    io_statement               go to state 140
    expression                 go to state 141
    assignment_expression      go to state 41
    logical_expression         go to state 42
    equality_expression        go to state 43
    relational_expression      go to state 44
    additive_expression        go to state 45
    multiplicative_expression  go to state 46
    unary_expression           go to state 47
    postfix_expression         go to state 48
    primary_expression         go to state 49
    array_index                go to state 50
    function_call              go to state 51
    lvalue                     go to state 52


State 172

   37 selection_statement: IF '(' expression ')' statement ELSE statement •

    $default  reduce using rule 37 (selection_statement)


State 173

   39 iteration_statement: FOR '(' expression_statement expression_statement expression ')' statement •

    $default  reduce using rule 39 (iteration_statement)
